{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport * as io from 'socket.io-client';\n\nclass WrappedSocket {\n  constructor(config) {\n    this.config = config;\n    this.subscribersCounter = {};\n    this.eventObservables$ = {};\n    this.emptyConfig = {\n      url: '',\n      options: {}\n    };\n\n    if (config === undefined) {\n      config = this.emptyConfig;\n    }\n\n    const url = config.url;\n    const options = config.options;\n    const ioFunc = io.default ? io.default : io;\n    this.ioSocket = ioFunc(url, options);\n  }\n\n  of(namespace) {\n    this.ioSocket.of(namespace);\n  }\n\n  on(eventName, callback) {\n    this.ioSocket.on(eventName, callback);\n  }\n\n  once(eventName, callback) {\n    this.ioSocket.once(eventName, callback);\n  }\n\n  connect() {\n    return this.ioSocket.connect();\n  }\n\n  disconnect(_close) {\n    return this.ioSocket.disconnect.apply(this.ioSocket, arguments);\n  }\n\n  emit(_eventName, ..._args) {\n    return this.ioSocket.emit.apply(this.ioSocket, arguments);\n  }\n\n  removeListener(_eventName, _callback) {\n    return this.ioSocket.removeListener.apply(this.ioSocket, arguments);\n  }\n\n  removeAllListeners(_eventName) {\n    return this.ioSocket.removeAllListeners.apply(this.ioSocket, arguments);\n  }\n\n  fromEvent(eventName) {\n    if (!this.subscribersCounter[eventName]) {\n      this.subscribersCounter[eventName] = 0;\n    }\n\n    this.subscribersCounter[eventName]++;\n\n    if (!this.eventObservables$[eventName]) {\n      this.eventObservables$[eventName] = new Observable(observer => {\n        const listener = data => {\n          observer.next(data);\n        };\n\n        this.ioSocket.on(eventName, listener);\n        return () => {\n          this.subscribersCounter[eventName]--;\n\n          if (this.subscribersCounter[eventName] === 0) {\n            this.ioSocket.removeListener(eventName, listener);\n            delete this.eventObservables$[eventName];\n          }\n        };\n      }).pipe(share());\n    }\n\n    return this.eventObservables$[eventName];\n  }\n\n  fromOneTimeEvent(eventName) {\n    return new Promise(resolve => this.once(eventName, resolve));\n  }\n\n}\n/** Socket factory */\n\n\nfunction SocketFactory(config) {\n  return new WrappedSocket(config);\n}\n\nconst SOCKET_CONFIG_TOKEN = new InjectionToken('__SOCKET_IO_CONFIG__');\n\nclass SocketIoModule {\n  static forRoot(config) {\n    return {\n      ngModule: SocketIoModule,\n      providers: [{\n        provide: SOCKET_CONFIG_TOKEN,\n        useValue: config\n      }, {\n        provide: WrappedSocket,\n        useFactory: SocketFactory,\n        deps: [SOCKET_CONFIG_TOKEN]\n      }]\n    };\n  }\n\n}\n\nSocketIoModule.ɵfac = function SocketIoModule_Factory(t) {\n  return new (t || SocketIoModule)();\n};\n\nSocketIoModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SocketIoModule\n});\nSocketIoModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SocketIoModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { WrappedSocket as Socket, SocketIoModule };","map":{"version":3,"names":["i0","InjectionToken","NgModule","Observable","share","io","WrappedSocket","constructor","config","subscribersCounter","eventObservables$","emptyConfig","url","options","undefined","ioFunc","default","ioSocket","of","namespace","on","eventName","callback","once","connect","disconnect","_close","apply","arguments","emit","_eventName","_args","removeListener","_callback","removeAllListeners","fromEvent","observer","listener","data","next","pipe","fromOneTimeEvent","Promise","resolve","SocketFactory","SOCKET_CONFIG_TOKEN","SocketIoModule","forRoot","ngModule","providers","provide","useValue","useFactory","deps","ɵfac","ɵmod","ɵinj","type","args","Socket"],"sources":["C:/Users/SystemForLinux/Desktop/f2/code/pinturillo/frontend/node_modules/ngx-socket-io/fesm2020/ngx-socket-io.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport * as io from 'socket.io-client';\n\nclass WrappedSocket {\n    constructor(config) {\n        this.config = config;\n        this.subscribersCounter = {};\n        this.eventObservables$ = {};\n        this.emptyConfig = {\n            url: '',\n            options: {},\n        };\n        if (config === undefined) {\n            config = this.emptyConfig;\n        }\n        const url = config.url;\n        const options = config.options;\n        const ioFunc = io.default ? io.default : io;\n        this.ioSocket = ioFunc(url, options);\n    }\n    of(namespace) {\n        this.ioSocket.of(namespace);\n    }\n    on(eventName, callback) {\n        this.ioSocket.on(eventName, callback);\n    }\n    once(eventName, callback) {\n        this.ioSocket.once(eventName, callback);\n    }\n    connect() {\n        return this.ioSocket.connect();\n    }\n    disconnect(_close) {\n        return this.ioSocket.disconnect.apply(this.ioSocket, arguments);\n    }\n    emit(_eventName, ..._args) {\n        return this.ioSocket.emit.apply(this.ioSocket, arguments);\n    }\n    removeListener(_eventName, _callback) {\n        return this.ioSocket.removeListener.apply(this.ioSocket, arguments);\n    }\n    removeAllListeners(_eventName) {\n        return this.ioSocket.removeAllListeners.apply(this.ioSocket, arguments);\n    }\n    fromEvent(eventName) {\n        if (!this.subscribersCounter[eventName]) {\n            this.subscribersCounter[eventName] = 0;\n        }\n        this.subscribersCounter[eventName]++;\n        if (!this.eventObservables$[eventName]) {\n            this.eventObservables$[eventName] = new Observable((observer) => {\n                const listener = (data) => {\n                    observer.next(data);\n                };\n                this.ioSocket.on(eventName, listener);\n                return () => {\n                    this.subscribersCounter[eventName]--;\n                    if (this.subscribersCounter[eventName] === 0) {\n                        this.ioSocket.removeListener(eventName, listener);\n                        delete this.eventObservables$[eventName];\n                    }\n                };\n            }).pipe(share());\n        }\n        return this.eventObservables$[eventName];\n    }\n    fromOneTimeEvent(eventName) {\n        return new Promise(resolve => this.once(eventName, resolve));\n    }\n}\n\n/** Socket factory */\nfunction SocketFactory(config) {\n    return new WrappedSocket(config);\n}\nconst SOCKET_CONFIG_TOKEN = new InjectionToken('__SOCKET_IO_CONFIG__');\nclass SocketIoModule {\n    static forRoot(config) {\n        return {\n            ngModule: SocketIoModule,\n            providers: [\n                { provide: SOCKET_CONFIG_TOKEN, useValue: config },\n                {\n                    provide: WrappedSocket,\n                    useFactory: SocketFactory,\n                    deps: [SOCKET_CONFIG_TOKEN],\n                },\n            ],\n        };\n    }\n}\nSocketIoModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: SocketIoModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSocketIoModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: SocketIoModule });\nSocketIoModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: SocketIoModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: SocketIoModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { WrappedSocket as Socket, SocketIoModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}